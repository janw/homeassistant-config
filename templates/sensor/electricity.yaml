# electricity_power: Three-phase power measurement at the
# flat's meter, summed up.
- name: "Electricity Consumption"
  unique_id: electricity_consumption
  state: >-
    {{
      [ states('sensor.p1_energy'),
        states('sensor.p2_energy'),
        states('sensor.p3_energy'),
      ] | map('float', 0) | sum
    }}
  availability: >-
    {{
      [ states('sensor.p1_energy'),
        states('sensor.p2_energy'),
        states('sensor.p3_energy'),
      ] | map('is_number') | min
    }}
  unit_of_measurement: kWh
  device_class: energy
  state_class: total_increasing


# electricity_power: Three-phase power measurement at the
# flat's meter, summed up and robust against negative values
# (i.e. not accounting for grid export).
- name: "Electricity Power"
  unique_id: electricity_power
  state: >-
    {{
      max([
        [ states('sensor.p1_power'),
          states('sensor.p2_power'),
          states('sensor.p3_power'),
        ] | map('float', 0) | sum,
        0
      ])
    }}
  availability: >-
    {{
      [ states('sensor.p1_power'),
        states('sensor.p2_power'),
        states('sensor.p3_power'),
      ] | map('is_number') | min
    }}
  unit_of_measurement: W
  device_class: power
  state_class: measurement

# electricity_grid_power_raw: Three-phase power measurement at the
# flat's meter, summed up (not accounting for grid export, therfore can become negative)
- name: "Electricity Grid Power Raw"
  unique_id: electricity_grid_power_raw
  state: >-
    {{
        [ states('sensor.p1_power'),
          states('sensor.p2_power'),
          states('sensor.p3_power'),
        ] | map('float', 0) | sum
    }}
  availability: >-
    {{
      [ states('sensor.p1_power'),
        states('sensor.p2_power'),
        states('sensor.p3_power'),
      ] | map('is_number') | min
    }}
  unit_of_measurement: W
  device_class: power
  state_class: measurement

- name: "Kilowatt-hour Rate"
  unique_id: kilowatt_hour_rate
  state: >-
    {{
      states('input_text.kilowatt_hour_rate_in_cents') | float(0) / 100
    }}
  unit_of_measurement: â‚¬/kWh
  state_class: measurement


# electricity_grid_power_export: Power that's being exported
# out to the grid from the PV (overage that is not used).
- name: "Electricity Grid Power Export"
  unique_id: electricity_grid_power_export
  state: >-
    {{ min([
          [ states('sensor.p1_power'),
            states('sensor.p2_power'),
            states('sensor.p3_power'),
          ] | map('float', 0) | sum,
          0
      ]) * -1
    }}
  availability: >-
    {{
      [ states('sensor.p1_power'),
        states('sensor.p2_power'),
        states('sensor.p3_power'),
      ] | map('is_number') | min
    }}
  unit_of_measurement: W
  device_class: power
  state_class: measurement


# electricity_raw_power_used: The raw power usage, with the
# PV influence removed. This is what we actually use at any
# given time.
- name: "Electricity Raw Power Used"
  unique_id: electricity_raw_power_used
  state: >-
    {{
      [
        states('sensor.p1_power'),
        states('sensor.p2_power'),
        states('sensor.p3_power'),
        states('sensor.photovoltaics_switch_0_power'),
      ] | map('float', 0) | sum
    }}
  availability: >-
    {{
      [ states('sensor.p1_power'),
        states('sensor.p2_power'),
        states('sensor.p3_power'),
        states('sensor.photovoltaics_switch_0_power'),
      ] | map('is_number') | min
    }}
  unit_of_measurement: W
  device_class: power
  state_class: measurement


# photovoltaics_power_used: The PV-produced power that we're
# using up at a given time.
- name: "Photovoltaics Power Used"
  unique_id: photovoltaics_power_used
  state: >-
    {{
      states('sensor.photovoltaics_switch_0_power') | float
      - states('sensor.electricity_grid_power_export') | float
    }}
  availability: >-
    {{
      [ states('sensor.photovoltaics_switch_0_power'),
        states('sensor.electricity_grid_power_export'),
      ] | map('is_number') | min
    }}
  unit_of_measurement: W
  device_class: power
  state_class: measurement

# photovoltaics_usage_coverage: Percentage of energy usage that
# is covered by the PV since we installed it.
- name: "Photovoltaics Usage Coverage"
  unique_id: photovoltaics_usage_coverage
  state: >-
    {{
      states('sensor.photovoltaics_energy_used_all_time') | float
      / states('sensor.electricity_raw_energy_used_all_time') | float
      * 100
    }}
  availability: >-
    {{
      [ states('sensor.photovoltaics_energy_used_all_time'),
        states('sensor.electricity_raw_energy_used_all_time'),
      ] | map('is_number') | min
    }}
  unit_of_measurement: '%'
  state_class: measurement


# photovoltaics_selfusage: Percentage of energy produced by
# the PV that we use ourselves (i.e. does not go into the grid).
- name: "Photovoltaics Self-Usage"
  unique_id: photovoltaics_self_usage
  state: >-
    {{
      states('sensor.photovoltaics_energy_used_all_time') | float
      / states('sensor.photovoltaics_switch_0_energy') | float
      * 100
    }}
  availability: >-
    {{
      [ states('sensor.photovoltaics_energy_used_all_time'),
        states('sensor.photovoltaics_switch_0_energy'),
      ] | map('is_number') | min
    }}
  unit_of_measurement: '%'
  state_class: measurement


# photovoltaics_electricity_cost_saved_all_time: Electricity
# cost saved during the lifetime of the PV setup
- name: "Photovoltaics Electricity Cost Saved All Time"
  unique_id: photovoltaics_electricity_cost_saved_all_time
  state: >-
    {{
      states('sensor.photovoltaics_energy_used_all_time') | float
      * states('sensor.kilowatt_hour_rate') | float
    }}
  availability: >-
    {{
      [ states('sensor.photovoltaics_energy_used_all_time'),
        states('sensor.kilowatt_hour_rate'),
      ] | map('is_number') | min
    }}
  unit_of_measurement: 'EUR'
  device_class: monetary
  state_class: total

# photovoltaics_electricity_cost_saved_monthly: Electricity
# cost saved with the PV setup on a monthly basis
- name: "Photovoltaics Electricity Cost Saved Monthly"
  unique_id: photovoltaics_electricity_cost_saved_monthly
  state: >-
    {{
      states('sensor.photovoltaics_energy_used_monthly') | float
      * states('sensor.kilowatt_hour_rate') | float
    }}
  availability: >-
    {{
      [ states('sensor.photovoltaics_energy_used_monthly'),
        states('sensor.kilowatt_hour_rate'),
      ] | map('is_number') | min
    }}
  unit_of_measurement: 'EUR'
  device_class: monetary
  state_class: total

# photovoltaics_self_usage_monthly: Percentage of energy produced by
# the PV that we use ourselves (i.e. does not go into the grid) on a
# monthly basis.
- name: "Photovoltaics Self-Usage Monthly"
  unique_id: photovoltaics_self_usage_monthly
  state: >-
    {{
      states('sensor.photovoltaics_energy_used_monthly') | float
      / states('sensor.photovoltaics_energy_produced_monthly') | float
      * 100
    }}
  availability: >-
    {{
      [ states('sensor.photovoltaics_energy_used_monthly'),
        states('sensor.photovoltaics_energy_produced_monthly'),
      ] | map('is_number') | min
    }}
  unit_of_measurement: '%'
  state_class: measurement

# photovoltaics_self_usage_monthly: Percentage of energy produced by
# the PV that we use ourselves (i.e. does not go into the grid) on a
# monthly basis.
- name: "Photovoltaics Self-Usage Daily"
  unique_id: photovoltaics_self_usage_daily
  state: >-
    {{
      states('sensor.photovoltaics_energy_used_daily') | float
      / states('sensor.photovoltaics_energy_produced_daily') | float
      * 100
    }}
  availability: >-
    {{
      [ states('sensor.photovoltaics_energy_used_daily'),
        states('sensor.photovoltaics_energy_produced_daily'),
      ] | map('is_number') | min
    }}
  unit_of_measurement: '%'
  state_class: measurement

# electricity_grid_consumption_measurement_offset: Difference
# between the constructed value of raw grid usage over time
# (integrated from the raw power usage of the Shelly 3EM) and
# the Shelly 3EM's energy reading.
- name: "Electricity Grid Consumption Measurement Offset Raw"
  unique_id: electricity_grid_consumption_measurement_offset_raw
  state: >-
    {{
      states('sensor.electricity_grid_energy_raw_all_time') | float
      - states('sensor.electricity_consumption') | float
    }}
  availability: >-
    {{
      [ states('sensor.electricity_grid_energy_raw_all_time'),
        states('sensor.electricity_consumption'),
      ] | map('is_number') | min
    }}
  unit_of_measurement: 'kWh'
  state_class: measurement

# electricity_grid_consumption_measurement_offset: Difference
# between the constructed value of raw grid usage over time
# (integrated from the zero-limited power usage of the Shelly
# 3EM) and the Shelly 3EM's energy reading.
- name: "Electricity Grid Consumption Measurement Offset"
  unique_id: electricity_grid_consumption_measurement_offset
  state: >-
    {{
      states('sensor.electricity_grid_energy_all_time') | float
      - states('sensor.electricity_consumption') | float
    }}
  availability: >-
    {{
      [ states('sensor.electricity_grid_energy_all_time'),
        states('sensor.electricity_consumption'),
      ] | map('is_number') | min
    }}
  unit_of_measurement: 'kWh'
  state_class: measurement
